name: üß™ Deploy to Development
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Source branch'
        required: true
        type: choice
        options: [dev]
        default: 'dev'

env:
  MOODLE_ROOT: /var/www/html/moodle-dev

jobs:
  deploy:
    name: üì¶ Package and Deploy Plugin
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch }}
        
    - name: Get plugin list
      id: plugins
      shell: bash
      run: |
        # Get list of plugins and format for GitHub Actions choice
        PLUGINS=$(ls -d mod/*/ | cut -d/ -f2 | jq -R . | jq -sc .)
        echo "Available plugins: $PLUGINS"
        echo "list=$PLUGINS" >> $GITHUB_OUTPUT

    - name: Select plugin
      uses: actions/github-script@v7
      id: select-plugin
      with:
        script: |
          const plugins = ${{ steps.plugins.outputs.list }}
          return await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: context.workflow,
            ref: context.ref,
            inputs: {
              plugin: {
                type: 'choice',
                description: 'Select plugin to deploy',
                required: true,
                options: plugins
              }
            }
          })

    - name: Create plugin package
      run: |
        zip -rq ${{ github.event.inputs.plugin }}.zip mod/${{ github.event.inputs.plugin }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: dev-plugin
        path: ${{ github.event.inputs.plugin }}.zip
        retention-days: 1

  deploy-dev:
    name: üñ•Ô∏è Deploy to Development
    needs: deploy
    runs-on: [self-hosted, dev]
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: dev-plugin
        
    - name: Deploy plugin
      run: |
        sudo unzip -qo *.zip -d "${{ env.MOODLE_ROOT }}/mod"
        sudo chown -R www-data:www-data "${{ env.MOODLE_ROOT }}/mod/${{ github.event.inputs.plugin }}"
        echo "‚úÖ Successfully deployed ${{ github.event.inputs.plugin }} to development"