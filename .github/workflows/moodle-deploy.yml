name: Manual Moodle Deployment

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Select deployment branch'
        required: true
        type: choice
        options:
          - main
          - dev
      plugin-directory:
        description: 'Plugin directory under mod/'
        required: true
        type: string

env:
  PROD_MOODLE_ROOT: /var/www/html/moodle-prod
  DEV_MOODLE_ROOT: /var/www/html/moodle-dev

jobs:
  package-plugin:
    name: Package Plugin
    runs-on: ubuntu-latest
    outputs:
      zip-file: ${{ steps.zip.outputs.zip-file }}
      timestamp: ${{ steps.timestamp.outputs.time }}

    steps:
    - name: Checkout selected branch
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch }}

    - name: Validate plugin directory
      run: |
        PLUGIN_PATH="mod/${{ github.event.inputs.plugin-directory }}"
        if [ ! -d "$PLUGIN_PATH" ]; then
          echo "::error:: Plugin directory '$PLUGIN_PATH' not found in ${{ github.event.inputs.branch }} branch!"
          exit 1
        fi

    - name: Generate timestamp
      id: timestamp
      run: echo "time=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

    - name: Create deployment package
      id: zip
      run: |
        ZIP_FILE="${{ github.event.inputs.plugin-directory }}-${{ steps.timestamp.outputs.time }}.zip"
        cd mod
        zip -qr "../$ZIP_FILE" "${{ github.event.inputs.plugin-directory }}"
        echo "zip-file=$ZIP_FILE" >> $GITHUB_OUTPUT

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: plugin-package
        path: ${{ steps.zip.outputs.zip-file }}
        retention-days: 5
        
  deploy-prod:
    name: Deploy to Production
    needs: package-plugin
    runs-on: moddle-server
    if: ${{ github.event.inputs.branch == 'main' }}
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: plugin-package

    - name: Deploy to Moodle
      run: |
        DEPLOY_DIR="${{ env.PROD_MOODLE_ROOT }}/mod"
        sudo unzip -qo ${{ needs.package-plugin.outputs.zip-file }} -d "$DEPLOY_DIR"
        sudo chown -R www-data:www-data "$DEPLOY_DIR/${{ github.event.inputs.plugin-directory }}"
        echo " Deployed ${{ github.event.inputs.plugin-directory }} to Production"

  deploy-dev:
    name: Deploy to Development
    needs: package-plugin
    runs-on: moodle-dev
    if: ${{ github.event.inputs.branch == 'dev' }}
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: plugin-package

    - name: Deploy to Moodle
      run: |
        DEPLOY_DIR="${{ env.DEV_MOODLE_ROOT }}/mod"
        sudo unzip -qo ${{ needs.package-plugin.outputs.zip-file }} -d "$DEPLOY_DIR"
        sudo chown -R www-data:www-data "$DEPLOY_DIR/${{ github.event.inputs.plugin-directory }}"
        echo " Deployed ${{ github.event.inputs.plugin-directory }} to Development"