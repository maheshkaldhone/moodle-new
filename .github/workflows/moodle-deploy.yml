name: üß™ Deploy to Development
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Source branch'
        required: true
        type: choice
        options: [dev]
        default: 'dev'

env:
  MOODLE_ROOT: /var/www/html/moodle-dev

jobs:
  get-plugins:
    uses: ./.github/workflows/list-plugins.yml

  package-plugin:
    name: üì¶ Package Plugin
    needs: get-plugins
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch }}
        
    - name: Select plugin
      uses: actions/github-script@v7
      with:
        script: |
          const plugins = ${{ needs.get-plugins.outputs.plugin_list }}
          
          const { plugin } = await github.rest.actions.getWorkflowInput({
            owner: context.repo.owner,
            repo: context.repo.repo,
            input_id: 'plugin',
            options: plugins
          })
          
          core.setOutput('selected_plugin', plugin)
          
    - name: Create plugin package
      run: |
        zip -rq ${{ steps.select-plugin.outputs.selected_plugin }}.zip mod/${{ steps.select-plugin.outputs.selected_plugin }}
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: dev-plugin
        path: ${{ steps.select-plugin.outputs.selected_plugin }}.zip
        retention-days: 1

  deploy-dev:
    name: üñ•Ô∏è Deploy to Development
    needs: [package-plugin, get-plugins]
    runs-on: [self-hosted, dev]
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: dev-plugin
        
    - name: Deploy plugin
      run: |
        sudo unzip -qo *.zip -d "${{ env.MOODLE_ROOT }}/mod"
        sudo chown -R www-data:www-data "${{ env.MOODLE_ROOT }}/mod/${{ steps.select-plugin.outputs.selected_plugin }}"
        echo "‚úÖ Successfully deployed ${{ steps.select-plugin.outputs.selected_plugin }} to development"