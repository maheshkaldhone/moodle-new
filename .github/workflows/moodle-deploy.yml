name: Dynamic Moodle Deployment (Dev)

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Select branch (use 'dev' for development)"
        required: true
        type: choice
        options:
          - dev
          - main
      plugin-directory:
        description: "Select plugin directory under mod/"
        required: true
        type: choice
        # Options will be populated dynamically by the dynamic-inputs action

env:
  DEV_MOODLE_ROOT: /var/www/html/moodle-dev

jobs:
  generate-inputs:
    name: Generate Plugin Directory Options
    runs-on: ubuntu-latest
    outputs:
      plugin-directories: ${{ steps.get-dirs.outputs.directories }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch }}

    - name: List directories under mod/
      id: get-dirs
      run: |
        DIRS=$(ls -d mod/*/ | sed 's/mod\///g; s/\///g' | tr '\n' ',' | sed 's/,$//')
        echo "directories=$DIRS" >> $GITHUB_OUTPUT

  package-plugin:
    name: Package Plugin
    needs: generate-inputs
    runs-on: ubuntu-latest
    outputs:
      zip-file: ${{ steps.zip.outputs.zip-file }}
      timestamp: ${{ steps.timestamp.outputs.time }}

    steps:
    - name: Dynamic Inputs
      uses: marocchino/dynamic-inputs@v2
      with:
        inputs: |
          plugin-directory:
            description: "Select plugin directory under mod/"
            required: true
            type: choice
            options: ${{ needs.generate-inputs.outputs.plugin-directories }}

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch }}

    - name: Validate plugin directory
      run: |
        PLUGIN_PATH="mod/${{ inputs.plugin-directory }}"
        if [ ! -d "$PLUGIN_PATH" ]; then
          echo "::error:: Plugin directory '$PLUGIN_PATH' not found!"
          exit 1
        fi

    - name: Generate timestamp
      id: timestamp
      run: echo "time=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

    - name: Create ZIP package
      id: zip
      run: |
        ZIP_FILE="${{ inputs.plugin-directory }}-${{ steps.timestamp.outputs.time }}.zip"
        cd mod
        zip -qr "../$ZIP_FILE" "${{ inputs.plugin-directory }}"
        echo "zip-file=$ZIP_FILE" >> $GITHUB_OUTPUT

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: dev-plugin-package
        path: ${{ steps.zip.outputs.zip-file }}
        retention-days: 3

  deploy-dev:
    name: Deploy to Development
    needs: [generate-inputs, package-plugin]
    runs-on: [self-hosted, Linux, X64, dev]
    if: ${{ github.event.inputs.branch == 'dev' }}
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: dev-plugin-package

    - name: Deploy to Moodle
      run: |
        DEPLOY_DIR="${{ env.DEV_MOODLE_ROOT }}/mod"
        sudo unzip -qo ${{ needs.package-plugin.outputs.zip-file }} -d "$DEPLOY_DIR"
        sudo chown -R www-data:www-data "$DEPLOY_DIR/${{ inputs.plugin-directory }}"
        sudo -u www-data php ${{ env.DEV_MOODLE_ROOT }}/admin/cli/purge_caches.php
        echo "âœ… Deployed ${{ inputs.plugin-directory }} to Development"